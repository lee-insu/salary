[{"/Users/insu/Desktop/coding/salary/src/index.js":"1","/Users/insu/Desktop/coding/salary/src/App.js":"2","/Users/insu/Desktop/coding/salary/src/components/header/header.jsx":"3","/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx":"4","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx":"5","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx":"6","/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx":"7","/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx":"8","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx":"9","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx":"10","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx":"11","/Users/insu/Desktop/coding/salary/src/components/search/search.jsx":"12","/Users/insu/Desktop/coding/salary/src/service/firebase.js":"13","/Users/insu/Desktop/coding/salary/src/service/store.js":"14","/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx":"15"},{"size":296,"mtime":1635172844147,"results":"16","hashOfConfig":"17"},{"size":1334,"mtime":1635259063109,"results":"18","hashOfConfig":"17"},{"size":3193,"mtime":1635172844134,"results":"19","hashOfConfig":"17"},{"size":3001,"mtime":1635260872709,"results":"20","hashOfConfig":"17"},{"size":4844,"mtime":1635259921864,"results":"21","hashOfConfig":"17"},{"size":261,"mtime":1631086738278,"results":"22","hashOfConfig":"17"},{"size":1292,"mtime":1635172844133,"results":"23","hashOfConfig":"17"},{"size":4376,"mtime":1635259921865,"results":"24","hashOfConfig":"17"},{"size":3785,"mtime":1635259063117,"results":"25","hashOfConfig":"17"},{"size":2728,"mtime":1635172844145,"results":"26","hashOfConfig":"17"},{"size":1599,"mtime":1635172844137,"results":"27","hashOfConfig":"17"},{"size":6631,"mtime":1635172844145,"results":"28","hashOfConfig":"17"},{"size":893,"mtime":1635172844147,"results":"29","hashOfConfig":"17"},{"size":779,"mtime":1635172844147,"results":"30","hashOfConfig":"17"},{"size":2787,"mtime":1635259063110,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pn9a5m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Users/insu/Desktop/coding/salary/src/index.js",[],["67","68"],"/Users/insu/Desktop/coding/salary/src/App.js",[],"/Users/insu/Desktop/coding/salary/src/components/header/header.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx",["69"],"/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx",["70","71","72"],"/Users/insu/Desktop/coding/salary/src/components/main/main.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx",["73","74"],"/Users/insu/Desktop/coding/salary/src/components/research/research.jsx",["75","76","77","78","79","80"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport style from './research.module.css';\n\nconst Research = () => {\n\n    const fireStore = firestore.collection('researchDate')\n    const [date,getDate] = useState([]);\n    const [keywords,getKeywords] = useState([]);\n \n\n\n    useEffect(()=> {\n        fireStore.onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            for(let i = 0; i < array.length; i++) {\n                const arr = array[i].id;\n                getDate(prevState => [...prevState,arr]);;\n            }\n        })\n    },[])\n    \n    useEffect(()=> {\n        date.map(date => {\n            fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc =>({\n                    id:doc.id,\n                    ...doc.data()\n                }))\n                array.map(keyword => {\n                    const keywords = keyword.keywords;\n                    getKeywords(prevState => [...prevState,keywords])\n                });\n            \n            })\n        })\n    },[date])\n\n    const keywordArr = new Set(keywords.flat());\n    const newKeyword = [...keywordArr];\n  \n\n    const keyword = newKeyword.map(keyword => \n        <li key={keyword.id} className={style.li_unActive}>{keyword}</li>\n        )\n\n\n    const dateArticle = date.map(date => \n        <div key={date} className={style.container}>\n        <div className={style.explain_box}>\n            <div className={style.name_box}>\n                <div className={style.date}>{date}</div>\n                <div className={style.sub_explain}>간편 키워드 검색을 통해서 앱을 빠르게 찾아보세요!</div>\n            </div>\n            <ul className={style.ul}>\n                {keyword}\n            </ul>\n        </div>\n        <ul className={style.article_box}>\n            <ResearchContents date = {date}/>\n        </ul>\n    </div>   \n    )\n\n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.main_title}>전체보기</div>\n                <div className={style.sub_title}>헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.</div>\n            </div>\n\n            {dateArticle}\n\n        </div>\n    );\n};\n\n\n\nexport default Research;\n\n\nconst ResearchContents = ({date}) => {\n\n    \n    const fireStore = firestore.collection('researchDate');\n    const [contents,getContents] = useState([]);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array)\n        })\n    },[])\n\n\n   const content = contents.map(content => \n            <Link to ={`/research/${content.year}년 ${content.month}월/${content.id}`}>\n            <li className={style.article}>\n                <div className={style.img_box}>\n                 <img className={style.img} src={content.img}/>\n                </div>\n               <div className={style.title}>{content.title}</div>\n               <div className={style.article_info}>\n                    <div className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{content.views}</div>\n                    <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n               </div>\n            </li>\n            </Link>\n    )\n\n    return (\n        <>\n            {content}\n        </>\n    )\n}","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx",["81","82"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport style from './research_content.module.css';\nimport firebase from 'firebase/app';\n\nconst ResearchContent = () => {\n\n    const params = useParams();\n    const date = params.date;\n    const docId = params.id;\n    const fireStore = firestore.collection('researchDate');\n    const [content, getContent] = useState('');\n    const [keywords, getKeywords] = useState([]); \n\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').doc(docId).update({\n            views:increment\n        })\n    },[])\n\n    useEffect(()=> {\n       \n\n        fireStore.doc(date).collection('research').doc(docId)\n        .get().then(result => {\n            const data = result.data();\n            getContent(data);\n            getKeywords(data.keywords);\n        })\n    },[])\n\n\n    const keyword = keywords.map(key => \n         <li key={key.id} className={style.keyword_li}>{key}</li>\n        )\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.header} style={{backgroundImage:`linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) ),url(${content.img})`,backgroundSize:'cover',backgroundRepeat:'no-repeat',opacity:'0.8'}}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.title}>{content.title}</div>\n                <div className={style.article_info}>\n                    <ul className={style.keyword_ul}>\n                        {keyword}\n                    </ul>\n                    <div className={style.user_info}>\n                        <div className={style.view}><img className={style.icon_view} src=\"/static/img/whiteview.png\" alt=\"view\"/>{content.views}</div>\n                        <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={style.article_container}>\n                <div className={style.article} dangerouslySetInnerHTML={{ __html: content.text }}></div>\n            </div>\n\n            {/* <div className={style.more}>\n                <div className={style.shadow}></div>\n                <div className={style.more_text}>\n                열심히 작성한 관리자를 위해!<br/>\n                아낌없는 후원이 가능하다구욧!\n                </div>\n                <button className={style.more_btn}>후원하고 더보기</button>\n            </div> */}\n        </div>\n    );\n};\n\nexport default ResearchContent;","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/search/search.jsx",["83","84","85"],"import React, { useEffect, useState } from 'react';\nimport style from './search.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\n\nconst Search = () => {\n\n    const [change, setChange] = useState(true);\n    const [contents, getContents] = useState([]);\n    const [researches,getResearches] = useState([]);\n    const [imgs, getImgs] = useState([]);\n    const params = useParams().id;\n\n    const liChange = (e) => {\n            const value = e.target.value;\n            if(value ==='app') {\n                setChange(true);\n            }else if(value === 'research') {\n                setChange(false)\n            }\n    }\n\n\n    useEffect(()=> {\n            firestore.collection('appKeyword').where('active','==',true).onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(keyword => {\n                    firestore.collection('appKeyword').doc(keyword.id).collection('appContents')\n                    .where('app_name',\">=\",params).where(\"app_name\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getContents(prevState => [...prevState,array])\n                        array.map(arr => {\n                            firestore.collection('imgs').doc(keyword.id).collection('img')\n                            .doc(arr.id).collection('list').where('order','==','1')\n                            .onSnapshot(snapshot => {\n                                const array = snapshot.docs.map(doc => ({\n                                    id:doc.id,\n                                    ...doc.data()\n                                }))\n                                getImgs(prevState => [...prevState,array]);\n                            })\n                        })\n                       \n                    })\n                })\n            })\n            //\n            firestore.collection('researchDate').onSnapshot(snapshot => {\n                const array =snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(arr => {\n                    firestore.collection('researchDate').doc(arr.id).collection('research')\n                    .where('title',\">=\",params).where(\"title\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getResearches(prevState => [...prevState,array])\n                    })\n                })\n            })\n    },[])\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map(img => \n                <li className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                </li>)\n            }\n        })\n    }\n\n\n    const content = contents.flat().map(content => \n                 <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={content.id}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n\n    const research = researches.flat().map(research => \n        <li key={research.id} className={style.article_li}>  \n            <div className={style.article_container}>\n                  <div className={style.art_category}>집중탐구 세상에 UX</div>\n                  <div className={style.art_title}>{research.title}</div>\n                  <div className={style.article}>{research.subTitle}</div>\n                <div className={style.contain_user}>\n                <ul className={style.ul}>\n                     <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{research.views}</li>\n                </ul>\n                 <Link to={`/research/${research.year}년 ${research.month}월/${research.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                </div>\n           </div>\n        </li>\n        )\n\n\n\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>검색</div>\n                <div className={style.main_title}>'{params}'검색 결과</div>\n                <div className={style.select_box}>\n                    <button onClick={liChange} value='app' className={change ? style.li_active: style.li_unActive}>앱 화면</button>\n                    <button onClick={liChange} value='research' className={!change ? style.li_active: style.li_unActive}>집중 탐구</button>\n                </div>\n            </div>\n            {change ? \n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 앱 화면</div>\n                        {content}\n                </div>\n            </div>\n\n                :\n\n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 집중탐구 컨텐츠</div>\n                    <ul className={style.article_box}>\n                           {research}\n\n                            \n                        </ul>\n\n                </div>\n            </div>\n        }\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state,props) => {\n    return {search:state}\n}\n\nexport default connect(mapStateToProps,null) (Search);","/Users/insu/Desktop/coding/salary/src/service/firebase.js",[],"/Users/insu/Desktop/coding/salary/src/service/store.js",[],"/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx",["86","87"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport style from './contentsList.module.css';\n\nconst ContentsList = () => {\n\n    const params = useParams().id;\n    const fireStore = firestore.collection('appKeyword').doc(params).collection('appContents')\n    const [contents, getContents] = useState([]);\n    const [imgs, getImgs] = useState([])\n\n\n    useEffect(()=> {\n        fireStore.where('active','==',false).onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array);\n            array.forEach(keyword => {\n                const key = keyword.id;\n                firestore.collection('imgs').doc(params).collection('img')\n                .doc(key).collection('list').where('order','==','1')\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getImgs(prevState => [...prevState,array])\n                })\n            })\n        })\n    },[params])\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map(img => \n                <li className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                </li>)\n            }\n        })\n    }\n\n\n\n    const content = contents.map(content => \n         <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={content.id}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n    \n\n\n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>{params}</div>\n                <div className={style.main_title}>전체보기</div>\n                <div className={style.sub_title}>헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.</div>\n            </div>\n\n            {content}\n\n        </div>\n    );\n};\n\nexport default ContentsList;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":44,"column":7,"nodeType":"94","endLine":44,"endColumn":9,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":26,"column":35,"nodeType":"98","messageId":"99","endLine":26,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":49,"column":7,"nodeType":"94","endLine":49,"endColumn":15,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"101","line":53,"column":36,"nodeType":"98","messageId":"102","endLine":53,"endColumn":38},{"ruleId":"92","severity":1,"message":"103","line":33,"column":7,"nodeType":"94","endLine":33,"endColumn":9,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"97","line":44,"column":38,"nodeType":"98","messageId":"99","endLine":44,"endColumn":40},{"ruleId":"92","severity":1,"message":"93","line":24,"column":7,"nodeType":"94","endLine":24,"endColumn":9,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"97","line":27,"column":23,"nodeType":"98","messageId":"99","endLine":27,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":33,"column":35,"nodeType":"98","messageId":"99","endLine":33,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":40,"column":7,"nodeType":"94","endLine":40,"endColumn":13,"suggestions":"106"},{"ruleId":"92","severity":1,"message":"107","line":101,"column":7,"nodeType":"94","endLine":101,"endColumn":9,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":108,"column":18,"nodeType":"111","endLine":108,"endColumn":64},{"ruleId":"92","severity":1,"message":"112","line":22,"column":7,"nodeType":"94","endLine":22,"endColumn":9,"suggestions":"113"},{"ruleId":"92","severity":1,"message":"114","line":33,"column":7,"nodeType":"94","endLine":33,"endColumn":9,"suggestions":"115"},{"ruleId":"96","severity":1,"message":"97","line":41,"column":39,"nodeType":"98","messageId":"99","endLine":41,"endColumn":41},{"ruleId":"92","severity":1,"message":"116","line":73,"column":7,"nodeType":"94","endLine":73,"endColumn":9,"suggestions":"117"},{"ruleId":"96","severity":1,"message":"101","line":76,"column":36,"nodeType":"98","messageId":"102","endLine":76,"endColumn":38},{"ruleId":"92","severity":1,"message":"93","line":34,"column":7,"nodeType":"94","endLine":34,"endColumn":15,"suggestions":"118"},{"ruleId":"96","severity":1,"message":"101","line":37,"column":36,"nodeType":"98","messageId":"102","endLine":37,"endColumn":38},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fireStore'. Either include it or remove the dependency array.","ArrayExpression",["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["122"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'fireStore', 'params.author', and 'params.id'. Either include them or remove the dependency array.",["123"],["124"],["125"],"React Hook useEffect has missing dependencies: 'date' and 'fireStore'. Either include them or remove the dependency array.",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'date', 'docId', 'fireStore', and 'increment'. Either include them or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'date', 'docId', and 'fireStore'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["129"],["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"131","fix":"137"},{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [fireStore]",{"range":"149","text":"150"},"Update the dependencies array to be: [active, fireStore]",{"range":"151","text":"152"},"Update the dependencies array to be: [fireStore, params.author, params.id]",{"range":"153","text":"154"},{"range":"155","text":"150"},"Update the dependencies array to be: [date, fireStore]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [date, docId, fireStore, increment]",{"range":"159","text":"160"},"Update the dependencies array to be: [date, docId, fireStore]",{"range":"161","text":"162"},"Update the dependencies array to be: [params]",{"range":"163","text":"164"},"Update the dependencies array to be: [fireStore, params]",{"range":"165","text":"166"},[1343,1345],"[fireStore]",[1887,1895],"[active, fireStore]",[1131,1133],"[fireStore, params.author, params.id]",[711,713],[1219,1225],"[date, fireStore]",[2849,2851],[730,732],"[date, docId, fireStore, increment]",[986,988],"[date, docId, fireStore]",[3077,3079],"[params]",[1245,1253],"[fireStore, params]"]