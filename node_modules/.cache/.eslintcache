[{"/Users/insu/Desktop/coding/salary/src/index.js":"1","/Users/insu/Desktop/coding/salary/src/App.js":"2","/Users/insu/Desktop/coding/salary/src/components/header/header.jsx":"3","/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx":"4","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx":"5","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx":"6","/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx":"7","/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx":"8","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx":"9","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx":"10","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx":"11","/Users/insu/Desktop/coding/salary/src/components/search/search.jsx":"12","/Users/insu/Desktop/coding/salary/src/service/firebase.js":"13","/Users/insu/Desktop/coding/salary/src/service/store.js":"14","/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx":"15","/Users/insu/Desktop/coding/salary/src/components/register/register.jsx":"16"},{"size":296,"mtime":1635172844147,"results":"17","hashOfConfig":"18"},{"size":2558,"mtime":1640681071392,"results":"19","hashOfConfig":"18"},{"size":3641,"mtime":1640675897907,"results":"20","hashOfConfig":"18"},{"size":3022,"mtime":1635492080878,"results":"21","hashOfConfig":"18"},{"size":4818,"mtime":1635395316201,"results":"22","hashOfConfig":"18"},{"size":261,"mtime":1631086738278,"results":"23","hashOfConfig":"18"},{"size":1292,"mtime":1637913850594,"results":"24","hashOfConfig":"18"},{"size":4412,"mtime":1635395203567,"results":"25","hashOfConfig":"18"},{"size":3823,"mtime":1635395070630,"results":"26","hashOfConfig":"18"},{"size":2727,"mtime":1635338342532,"results":"27","hashOfConfig":"18"},{"size":3641,"mtime":1640675897907,"results":"28","hashOfConfig":"18"},{"size":6682,"mtime":1640675897909,"results":"29","hashOfConfig":"18"},{"size":893,"mtime":1635172844147,"results":"30","hashOfConfig":"18"},{"size":963,"mtime":1640675897909,"results":"31","hashOfConfig":"18"},{"size":2510,"mtime":1640675897906,"results":"32","hashOfConfig":"18"},{"size":3520,"mtime":1640675897908,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13n51cb",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/insu/Desktop/coding/salary/src/index.js",[],["75","76"],"/Users/insu/Desktop/coding/salary/src/App.js",["77"],"/Users/insu/Desktop/coding/salary/src/components/header/header.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx",["78"],"import React, { useEffect, useState } from 'react';\nimport style from './banner.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\"; \nimport \"./slick-theme.css\";\n\nconst Banner = () => {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        autoplaySpeed: 2000\n      };\n\n    const [contents,getContents] = useState([]);\n    const fireStore = firestore.collection('researchDate');\n\n\n\n    useEffect(()=> {\n        fireStore.onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            array.forEach(date => {\n                fireStore.doc(date.id).collection('research').where('active','==',true)\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getContents(prevState => [...prevState,array]);\n                })\n            })\n        })\n    },[])\n\n    const contentsFlat = contents.flat();\n    const allContentsArray = [...new Set(contentsFlat.map(JSON.stringify))].map(JSON.parse);\n    \n\n        const content = allContentsArray.map((content,i) => \n            <div key={i}>\n                <div  className={style.container}>\n                    <div className={style.content_box}>\n                        <div className={style.category}>집중탐구 세상에 UX</div>\n                        <div className={style.title}>{content.title}</div>\n                        <div className={style.content}>{content.subTitle}</div>\n                        <div className={style.container_user}>\n                            <ul className={style.ul}>\n                                 <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/></li>\n                                 <li className={style.view}>{content.views}</li>\n                             </ul>\n                        <Link to={`/research/${content.year}년 ${content.month}월/${content.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                        </div>\n                    </div>\n                    <div className={style.img_box}>\n                        <img  className={style.img} src={content.img} alt={content.img}/>\n                    </div>\n               </div>\n            </div>\n            )\n\n    return (\n        <div className={style.session} >\n            <Slider {...settings}>\n                  {content}\n            </Slider>\n\n           \n        </div>\n    );\n};\n\nexport default Banner;\n\n","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx",["79","80","81"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport style from './app_content.module.css';\n\nconst AppContent = () => {\n\n    const fireStore = firestore.collection('appKeyword');\n\n    const [active,setActive] = useState(null);\n    const [keywords,getKeywords] = useState([]);\n    const [contents,getContents] = useState([])\n    const [imgs,getImgs] = useState([]);\n    const [count,setCount] = useState(3);\n    \n\n\n\n    useEffect(()=> {\n        fireStore.where('active','==',true).onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            getKeywords(array);\n            if(active === null) {\n                array.map(keyword => {\n                    fireStore.doc(keyword.id).collection('appContents').where('active','==',true)\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getContents(prevState => [...prevState,array])\n                        array.map(arr => \n                            firestore.collection('imgs').doc(keyword.id).collection('img')\n                            .doc(arr.id).collection('list').where('order','==','1')\n                            .onSnapshot(snapshot => {\n                                const array = snapshot.docs.map(doc => ({\n                                    id:doc.id,\n                                    ...doc.data()\n                                }))\n                                getImgs(prevState => [...prevState,array]);\n                            })\n                            )\n                    })\n                })\n            }\n        })\n    },[active])\n\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map((img,i) => \n                    <li key={i} className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                    </li>\n                )\n            }\n        })\n    }\n\n\n\n\n    const content = contents.flat().map((content,i) => \n            <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={i}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n\n    const handleKeyword = e => {\n        setActive(e);\n        fireStore.doc(e).collection('appContents').limit(3)\n        .onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array)\n        })\n    }\n\n    const keyword = keywords.map((keyword,i) => \n        <li\n        key={i}\n        onClick= {()=>handleKeyword(keyword.id)}\n        className={active === keyword.id ? style.li_active : style.li_unActive}\n        >\n        {keyword.id}\n        </li>\n        )\n    \n\n    return (\n        <div className={style.session}>\n            <div className={style.container}>\n                 <nav className={style.nav}>\n                     <div className={style.title}>어떤 앱 화면을 찾고 계시나요?</div>\n                     <div className={style.sub_title}>간편 키워드 검색을 통해서 앱을 빠르게 찾아보세요!</div>\n                     <ul className={style.ul}>\n                            <li \n                            className={!active? style.li_active : style.li_unActive}\n                            onClick={()=>setActive(null)}\n                            >\n                            전체\n                            </li>\n                            {keyword}\n                     </ul>\n                 </nav>\n            </div>\n           \n           {contents ? content.slice(0,count) : null}\n\n            {content.length > count? \n            <div onClick={()=>{setCount(count + 3)}} className={style.more}>더보기</div>\n            :\n            <div className = {style.no}>{content.length > 3 ? '불러올 컨텐츠가 없습니다.' : null}</div>\n            }\n            \n        </div>\n    );\n};\n\nexport default AppContent;","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx",["82","83"],"import React, { useEffect, useState } from 'react';\nimport style from './onboard.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\n\n\nconst Onboard = () => {\n\n    const params = useParams();\n    const fireStore = firestore.collection('appKeyword')\n    const [content,getContent] = useState('');\n    const [imgs,getImgs] = useState([]);\n    const [research,getResearch] = useState([]);\n\n\n    useEffect(()=> {\n        fireStore.doc(params.author).collection('appContents').doc(params.id)\n        .get().then(result => {\n            const data = result.data();\n            getContent(data);\n        })\n\n        firestore.collection('imgs').doc(params.author).collection('img').doc(params.id)\n        .collection('list').orderBy('order').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getImgs(array);\n        })\n    },[])\n\n\n    useEffect(()=> {\n       if(content) {\n        const research = content.research_keyword;\n        firestore.collection('researchDate').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            array.forEach(date=> {\n               research.map(research => {\n                firestore.collection('researchDate').doc(date.id).collection('research').where('keywords','array-contains',research)\n                .where('active','==',true).onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getResearch(prevState => [...prevState,array]);\n                })\n               })\n            })\n        })\n       }\n    },[content])\n\n\n\n    const imgView = e => {\n        return e.map((img,i) => \n            <li key={i} className={style.img}>\n                <img className={style.imgs} src={img} alt={img.name}/>\n            </li>\n            )\n    }\n\n\n    const imgArray = imgs.slice(1,).map((img,i) => \n        <div key={i} className={style.container}>  \n            <div className={style.content_box}>\n              <div className={style.name_box}>\n                     <div className={style.title}>{img.sub}</div>\n                </div>\n            <ul className={style.img_box}>\n                {imgView(img.imgs)}\n            </ul>\n        </div>\n    </div>\n        )\n\n\n\n    const researchViews = research.flat().map((research,i) => \n        <li key={i} className={style.article_li}>  \n            <div className={style.article_box}>\n                  <div className={style.art_category}>집중탐구 세상에 UX</div>\n                  <div className={style.art_title}>{research.title}</div>\n                  <div className={style.article}>{research.subTitle}</div>\n                <div className={style.contain_user}>\n                <ul className={style.ul}>\n                     <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{research.views}</li>\n                </ul>\n                 <Link to={`/research/${research.year}년 ${research.month}월/${research.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                </div>\n           </div>\n        </li>\n\n    )\n\n\n    return (\n        <div className={style.session}>\n            <div className={style.explain_box}>\n                <div className={style.category}>{content.title_app_keyword}</div>\n                <div className={style.company}>{content.app_name}</div>\n                <div className={style.version}>update ver {content.app_ver} v</div>\n            </div>\n\n            {imgArray}\n    \n            <div className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>집중탐구</div>\n                    </div>\n                </div>  \n                <ul className={style.article_container}>\n                {researchViews}\n                </ul>\n            </div>\n\n        </div>\n    );\n};\n\n\n\nexport default Onboard;\n\n","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx",["84","85","86","87","88","89"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport style from './research.module.css';\n\nconst Research = () => {\n\n    const fireStore = firestore.collection('researchDate')\n    const [date,getDate] = useState([]);\n    const [keywords,getKeywords] = useState([]);\n \n\n\n    useEffect(()=> {\n        fireStore.onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            for(let i = 0; i < array.length; i++) {\n                const arr = array[i].id;\n                getDate(prevState => [...prevState,arr]);;\n            }\n        })\n    },[])\n    \n    useEffect(()=> {\n        date.map(date => {\n            fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc =>({\n                    id:doc.id,\n                    ...doc.data()\n                }))\n                array.map(keyword => {\n                    const keywords = keyword.keywords;\n                    getKeywords(prevState => [...prevState,keywords])\n                });\n            \n            })\n        })\n    },[date])\n\n    const keywordArr = new Set(keywords.flat());\n    const newKeyword = [...keywordArr];\n  \n\n    const keyword = newKeyword.map(keyword => \n        <li key={keyword.id} className={style.li_unActive}>{keyword}</li>\n        )\n\n\n    const dateArticle = date.map(date => \n        <div key={date} className={style.container}>\n        <div className={style.explain_box}>\n            <div className={style.name_box}>\n                <div className={style.date}>{date}</div>\n                <div className={style.sub_explain}>간편 키워드 검색을 통해서 앱을 빠르게 찾아보세요!</div>\n            </div>\n            <ul className={style.ul}>\n                {keyword}\n            </ul>\n        </div>\n        <ul className={style.article_box}>\n            <ResearchContents date = {date}/>\n        </ul>\n    </div>   \n    )\n\n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.main_title}>전체보기</div>\n                <div className={style.sub_title}>헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.</div>\n            </div>\n\n            {dateArticle}\n\n        </div>\n    );\n};\n\n\n\nexport default Research;\n\n\nconst ResearchContents = ({date}) => {\n\n    \n    const fireStore = firestore.collection('researchDate');\n    const [contents,getContents] = useState([]);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').where('active','==',true).onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array)\n        })\n    },[])\n\n\n   const content = contents.map((content,i) => \n            <Link to ={`/research/${content.year}년 ${content.month}월/${content.id}`}>\n            <li key={i} className={style.article}>\n                <div className={style.img_box}>\n                 <img className={style.img} src={content.img}/>\n                </div>\n               <div className={style.title}>{content.title}</div>\n               <div className={style.article_info}>\n                    <div className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{content.views}</div>\n                    <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n               </div>\n            </li>\n            </Link>\n    )\n\n    return (\n        <>\n            {content}\n        </>\n    )\n}","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx",["90","91"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport style from './research_content.module.css';\nimport firebase from 'firebase/app';\n\nconst ResearchContent = () => {\n\n    const params = useParams();\n    const date = params.date;\n    const docId = params.id;\n    const fireStore = firestore.collection('researchDate');\n    const [content, getContent] = useState('');\n    const [keywords, getKeywords] = useState([]); \n\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').doc(docId).update({\n            views:increment\n        })\n    },[])\n\n    useEffect(()=> {\n       \n\n        fireStore.doc(date).collection('research').doc(docId)\n        .get().then(result => {\n            const data = result.data();\n            getContent(data);\n            getKeywords(data.keywords);\n        })\n    },[])\n\n\n    const keyword = keywords.map((key,i) => \n         <li key={i} className={style.keyword_li}>{key}</li>\n        )\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.header} style={{backgroundImage:`linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) ),url(${content.img})`,backgroundSize:'cover',backgroundRepeat:'no-repeat',opacity:'0.8'}}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.title}>{content.title}</div>\n                <div className={style.article_info}>\n                    <ul className={style.keyword_ul}>\n                        {keyword}\n                    </ul>\n                    <div className={style.user_info}>\n                        <div className={style.view}><img className={style.icon_view} src=\"/static/img/whiteview.png\" alt=\"view\"/>{content.views}</div>\n                        <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={style.article_container}>\n                <div className={style.article} dangerouslySetInnerHTML={{ __html: content.text }}></div>\n            </div>\n\n            {/* <div className={style.more}>\n                <div className={style.shadow}></div>\n                <div className={style.more_text}>\n                열심히 작성한 관리자를 위해!<br/>\n                아낌없는 후원이 가능하다구욧!\n                </div>\n                <button className={style.more_btn}>후원하고 더보기</button>\n            </div> */}\n        </div>\n    );\n};\n\nexport default ResearchContent;","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx",["92"],"import React, { useEffect, useState } from \"react\";\nimport style from \"./login.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firebaseAuth, firestore } from \"../../service/firebase\";\n\nconst Login = () => {\n  const [email, getEmail] = useState(\"\");\n  const [password, getPassword] = useState(\"\");\n  const [userList, getUserList] = useState([]);\n\n  const history = useHistory();\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === \"email\") {\n      getEmail(value);\n    } else if (name === \"password\") {\n      getPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await firebaseAuth.signInWithEmailAndPassword(email, password);\n      history.push(\"/\");\n    } catch (error) {\n      if (error.code === \"auth/user-not-found\") {\n        alert(\"유저 정보가 없습니다\");\n        getEmail(\"\");\n        getPassword(\"\");\n      } else if (error.code === \"auth/wrong-password\") {\n        alert(\"비밀번호가 틀렸습니다\");\n        getPassword(\"\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    firestore.collection(\"user\").onSnapshot((snapshot) => {\n      const usermail = snapshot.docs.map((doc) => ({\n        email: doc.data().email,\n      }));\n      usermail.map((doc) => {\n        getUserList((prevState) => [...prevState, doc.email]);\n      });\n    });\n  }, []);\n\n  const resetPassword = (e) => {\n    e.preventDefault();\n    if (!email) {\n      alert(\"이메일란에 이메일을 적으면 재설정 메일이 발송됩니다.\");\n    } else {\n      if (userList.includes(email)) {\n        alert(\"해당 메일로 재설정 메일을 보냈습니다!\");\n        firebaseAuth.sendPasswordResetEmail(email);\n        getEmail(\"\");\n      } else {\n        alert(\"가입되지 않은 계정입니다.\");\n      }\n    }\n  };\n\n  return (\n    <div className={style.session}>\n      <div className={style.main_box}>\n        <div className={style.category}>헤이앱</div>\n        <div className={style.main_title}>로그인</div>\n        <div className={style.sub_title}>이메일과 비밀번호를 입력해주세요.</div>\n      </div>\n\n      <div className={style.signin_container}>\n        <button onClick={resetPassword} className={style.find_user}>\n          비밀번호를 잊어버리셨나요?{\" \"}\n          <FontAwesomeIcon className={style.icon} icon={faChevronRight} />\n        </button>\n        <form className={style.signin} onSubmit={onSubmit}>\n          <div className={style.id_container}>\n            <div className={style.id_text}>헤이앱 이메일</div>\n            <input\n              className={style.input}\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className={style.pw_container}>\n            <div className={style.pw_text}>비밀번호</div>\n            <input\n              className={style.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </div>\n\n          <div className={style.submit_btn}>\n            <div className={style.signup_btn}>\n              <Link to=\"/register\">회원가입</Link>\n            </div>\n            <input className={style.submit} type=\"submit\" value=\"로그인\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/insu/Desktop/coding/salary/src/components/search/search.jsx",["93","94","95"],"import React, { useEffect, useState } from 'react';\nimport style from './search.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\n\nconst Search = () => {\n\n    const [change, setChange] = useState(true);\n    const [contents, getContents] = useState([]);\n    const [researches,getResearches] = useState([]);\n    const [imgs, getImgs] = useState([]);\n    const params = useParams().id;\n\n    const liChange = (e) => {\n            const value = e.target.value;\n            if(value ==='app') {\n                setChange(true);\n            }else if(value === 'research') {\n                setChange(false)\n            }\n    }\n\n\n    useEffect(()=> {\n            firestore.collection('appKeyword').where('active','==',true).onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(keyword => {\n                    firestore.collection('appKeyword').doc(keyword.id).collection('appContents')\n                    .where('active','==',true).where('app_name',\">=\",params).where(\"app_name\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getContents(prevState => [...prevState,array])\n                        array.map(arr => {\n                            firestore.collection('imgs').doc(keyword.id).collection('img')\n                            .doc(arr.id).collection('list').where('order','==','1')\n                            .onSnapshot(snapshot => {\n                                const array = snapshot.docs.map(doc => ({\n                                    id:doc.id,\n                                    ...doc.data()\n                                }))\n                                getImgs(prevState => [...prevState,array]);\n                            })\n                        })\n                       \n                    })\n                })\n            })\n            \n            firestore.collection('researchDate').onSnapshot(snapshot => {\n                const array =snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(arr => {\n                    firestore.collection('researchDate').doc(arr.id).collection('research')\n                    .where('active','==',true).where('title',\">=\",params).where(\"title\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getResearches(prevState => [...prevState,array])\n                    })\n                })\n            })\n    },[])\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map((img,i) => \n                <li key={i} className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                </li>)\n            }\n        })\n    }\n\n\n    const content = contents.flat().map((content,i) => \n                 <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={i}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n\n    const research = researches.flat().map((research,i) => \n        <li key={i} className={style.article_li}>  \n            <div className={style.article_container}>\n                  <div className={style.art_category}>집중탐구 세상에 UX</div>\n                  <div className={style.art_title}>{research.title}</div>\n                  <div className={style.article}>{research.subTitle}</div>\n                <div className={style.contain_user}>\n                <ul className={style.ul}>\n                     <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{research.views}</li>\n                </ul>\n                 <Link to={`/research/${research.year}년 ${research.month}월/${research.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                </div>\n           </div>\n        </li>\n        )\n\n\n\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>검색</div>\n                <div className={style.main_title}>'{params}'검색 결과</div>\n                <div className={style.select_box}>\n                    <button onClick={liChange} value='app' className={change ? style.li_active: style.li_unActive}>앱 화면</button>\n                    <button onClick={liChange} value='research' className={!change ? style.li_active: style.li_unActive}>집중 탐구</button>\n                </div>\n            </div>\n            {change ? \n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 앱 화면</div>\n                        {content}\n                </div>\n            </div>\n\n                :\n\n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 집중탐구 컨텐츠</div>\n                    <ul className={style.article_box}>\n                           {research}\n\n                            \n                        </ul>\n\n                </div>\n            </div>\n        }\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state,props) => {\n    return {search:state}\n}\n\nexport default connect(mapStateToProps,null) (Search);","/Users/insu/Desktop/coding/salary/src/service/firebase.js",[],"/Users/insu/Desktop/coding/salary/src/service/store.js",[],"/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx",["96","97"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { firestore } from \"../../service/firebase\";\nimport style from \"./contentsList.module.css\";\n\nconst ContentsList = () => {\n  const params = useParams().id;\n  const fireStore = firestore\n    .collection(\"appKeyword\")\n    .doc(params)\n    .collection(\"appContents\");\n  const [contents, getContents] = useState([]);\n  const [imgs, getImgs] = useState([]);\n\n  useEffect(() => {\n    fireStore.where(\"active\", \"==\", true).onSnapshot((snapshot) => {\n      const array = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      getContents(array);\n      array.forEach((keyword) => {\n        const key = keyword.id;\n        firestore\n          .collection(\"imgs\")\n          .doc(params)\n          .collection(\"img\")\n          .doc(key)\n          .collection(\"list\")\n          .where(\"order\", \"==\", \"1\")\n          .onSnapshot((snapshot) => {\n            const array = snapshot.docs.map((doc) => ({\n              id: doc.id,\n              ...doc.data(),\n            }));\n            getImgs((prevState) => [...prevState, array]);\n          });\n      });\n    });\n  }, [params]);\n\n  const imgsView = (id) => {\n    return imgs.flat().map((img) => {\n      if (id === `${img.app_name}${img.app_ver}`) {\n        return img.imgs.map((img, i) => (\n          <li key={i} className={style.img}>\n            <img className={style.imgs} src={img} alt=\"\" />\n          </li>\n        ));\n      }\n    });\n  };\n\n  const content = contents.map((content, i) => (\n    <Link to={`/onboard/${content.title_app_keyword}/${content.id}`}>\n      <div key={i} className={style.container}>\n        <div className={style.content_box}>\n          <div className={style.name_box}>\n            <div className={style.title}>{content.app_name}</div>\n            <div className={style.update}>\n              업데이트 버전: {content.app_ver} v\n            </div>\n          </div>\n          <ul className={style.img_box}>{imgsView(content.id)}</ul>\n        </div>\n      </div>\n    </Link>\n  ));\n\n  return (\n    <div className={style.session}>\n      <div className={style.main_box}>\n        <div className={style.category}>{params}</div>\n        <div className={style.main_title}>전체보기</div>\n        <div className={style.sub_title}>\n          헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.\n        </div>\n      </div>\n\n      {content}\n    </div>\n  );\n};\n\nexport default ContentsList;\n","/Users/insu/Desktop/coding/salary/src/components/register/register.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":30,"column":6,"nodeType":"104","endLine":30,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":44,"column":7,"nodeType":"104","endLine":44,"endColumn":9,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":35,"nodeType":"110","messageId":"111","endLine":26,"endColumn":37},{"ruleId":"102","severity":1,"message":"106","line":49,"column":7,"nodeType":"104","endLine":49,"endColumn":15,"suggestions":"112"},{"ruleId":"108","severity":1,"message":"113","line":53,"column":36,"nodeType":"110","messageId":"114","endLine":53,"endColumn":38},{"ruleId":"102","severity":1,"message":"115","line":33,"column":7,"nodeType":"104","endLine":33,"endColumn":9,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"109","line":44,"column":38,"nodeType":"110","messageId":"111","endLine":44,"endColumn":40},{"ruleId":"102","severity":1,"message":"106","line":24,"column":7,"nodeType":"104","endLine":24,"endColumn":9,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"109","line":27,"column":23,"nodeType":"110","messageId":"111","endLine":27,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":33,"column":35,"nodeType":"110","messageId":"111","endLine":33,"endColumn":37},{"ruleId":"102","severity":1,"message":"106","line":40,"column":7,"nodeType":"104","endLine":40,"endColumn":13,"suggestions":"118"},{"ruleId":"102","severity":1,"message":"119","line":101,"column":7,"nodeType":"104","endLine":101,"endColumn":9,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":108,"column":18,"nodeType":"123","endLine":108,"endColumn":64},{"ruleId":"102","severity":1,"message":"124","line":22,"column":7,"nodeType":"104","endLine":22,"endColumn":9,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"126","line":33,"column":7,"nodeType":"104","endLine":33,"endColumn":9,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"109","line":49,"column":26,"nodeType":"110","messageId":"111","endLine":49,"endColumn":28},{"ruleId":"108","severity":1,"message":"109","line":41,"column":39,"nodeType":"110","messageId":"111","endLine":41,"endColumn":41},{"ruleId":"102","severity":1,"message":"128","line":73,"column":7,"nodeType":"104","endLine":73,"endColumn":9,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"113","line":76,"column":36,"nodeType":"110","messageId":"114","endLine":76,"endColumn":38},{"ruleId":"102","severity":1,"message":"106","line":40,"column":6,"nodeType":"104","endLine":40,"endColumn":14,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"113","line":43,"column":34,"nodeType":"110","messageId":"114","endLine":43,"endColumn":36},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'fireStore'. Either include it or remove the dependency array.",["134"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["135"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'fireStore', 'params.author', and 'params.id'. Either include them or remove the dependency array.",["136"],["137"],["138"],"React Hook useEffect has missing dependencies: 'date' and 'fireStore'. Either include them or remove the dependency array.",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'date', 'docId', 'fireStore', and 'increment'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'date', 'docId', and 'fireStore'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"146","fix":"152"},{"desc":"153","fix":"154"},{"desc":"153","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [getUser]",{"range":"164","text":"165"},"Update the dependencies array to be: [fireStore]",{"range":"166","text":"167"},"Update the dependencies array to be: [active, fireStore]",{"range":"168","text":"169"},"Update the dependencies array to be: [fireStore, params.author, params.id]",{"range":"170","text":"171"},{"range":"172","text":"167"},"Update the dependencies array to be: [date, fireStore]",{"range":"173","text":"174"},{"range":"175","text":"174"},"Update the dependencies array to be: [date, docId, fireStore, increment]",{"range":"176","text":"177"},"Update the dependencies array to be: [date, docId, fireStore]",{"range":"178","text":"179"},"Update the dependencies array to be: [params]",{"range":"180","text":"181"},"Update the dependencies array to be: [fireStore, params]",{"range":"182","text":"183"},[1084,1086],"[getUser]",[1369,1371],"[fireStore]",[1886,1894],"[active, fireStore]",[1131,1133],"[fireStore, params.author, params.id]",[711,713],[1219,1225],"[date, fireStore]",[2875,2877],[730,732],"[date, docId, fireStore, increment]",[986,988],"[date, docId, fireStore]",[3127,3129],"[params]",[1199,1207],"[fireStore, params]"]