[{"/Users/insu/Desktop/coding/salary/src/index.js":"1","/Users/insu/Desktop/coding/salary/src/App.js":"2","/Users/insu/Desktop/coding/salary/src/components/header/header.jsx":"3","/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx":"4","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx":"5","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx":"6","/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx":"7","/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx":"8","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx":"9","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx":"10","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx":"11","/Users/insu/Desktop/coding/salary/src/components/search/search.jsx":"12","/Users/insu/Desktop/coding/salary/src/service/firebase.js":"13","/Users/insu/Desktop/coding/salary/src/service/store.js":"14","/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx":"15"},{"size":296,"mtime":1635172844147,"results":"16","hashOfConfig":"17"},{"size":1334,"mtime":1635222541733,"results":"18","hashOfConfig":"17"},{"size":3193,"mtime":1635172844134,"results":"19","hashOfConfig":"17"},{"size":5695,"mtime":1635172844140,"results":"20","hashOfConfig":"17"},{"size":6602,"mtime":1635230370403,"results":"21","hashOfConfig":"17"},{"size":261,"mtime":1631086738278,"results":"22","hashOfConfig":"17"},{"size":1292,"mtime":1635172844133,"results":"23","hashOfConfig":"17"},{"size":5036,"mtime":1635172844142,"results":"24","hashOfConfig":"17"},{"size":4345,"mtime":1635172844144,"results":"25","hashOfConfig":"17"},{"size":2728,"mtime":1635172844145,"results":"26","hashOfConfig":"17"},{"size":1599,"mtime":1635172844137,"results":"27","hashOfConfig":"17"},{"size":6631,"mtime":1635172844145,"results":"28","hashOfConfig":"17"},{"size":893,"mtime":1635172844147,"results":"29","hashOfConfig":"17"},{"size":779,"mtime":1635172844147,"results":"30","hashOfConfig":"17"},{"size":2787,"mtime":1635224612075,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pn9a5m",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/insu/Desktop/coding/salary/src/index.js",[],["69","70"],"/Users/insu/Desktop/coding/salary/src/App.js",[],"/Users/insu/Desktop/coding/salary/src/components/header/header.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx",["71"],"import React, { useEffect, useState } from 'react';\nimport style from './banner.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport Slider from \"react-slick\";\nimport \"./slick.css\"; \nimport \"./slick-theme.css\";\n\nconst Banner = () => {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        autoplaySpeed: 8000\n      };\n\n    const [contents,getContents] = useState([]);\n    const fireStore = firestore.collection('researchDate');\n\n\n\n    useEffect(()=> {\n        fireStore.onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            array.forEach(date => {\n                fireStore.doc(date.id).collection('research')\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getContents(prevState => [...prevState,array]);\n                })\n            })\n        })\n    },[])\n\n    const contentsFlat = contents.flat();\n    const allContentsArray = [...new Set(contentsFlat.map(JSON.stringify))].map(JSON.parse);\n    \n\n        const content = allContentsArray.map(content => \n            <div key={content.id}>\n                <div  className={style.container}>\n                    <div className={style.content_box}>\n                        <div className={style.category}>집중탐구 세상에 UX</div>\n                        <div className={style.title}>{content.title}</div>\n                        <div className={style.content}>{content.subTitle}</div>\n                        <div className={style.container_user}>\n                            <ul className={style.ul}>\n                                 <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/></li>\n                                 <li className={style.view}>{content.views}</li>\n                             </ul>\n                        <Link to={`/research/${content.year}년 ${content.month}월/${content.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                        </div>\n                    </div>\n                    <div className={style.img_box}>\n                        <img  className={style.img} src={content.img} alt={content.img}/>\n                    </div>\n               </div>\n            </div>\n            )\n\n    return (\n        <div className={style.session} >\n            <Slider {...settings}>\n                  {content}\n            </Slider>\n\n           \n        </div>\n    );\n};\n\nexport default Banner;\n\n\n// import React, { useEffect, useState } from 'react';\n// import style from './banner.module.css';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n// import { Link } from 'react-router-dom';\n// import { firestore } from '../../../service/firebase';\n// import Slider from \"react-slick\";\n// import \"./slick.css\"; \n// import \"./slick-theme.css\";\n\n// const Banner = () => {\n\n//     const settings = {\n//         dots: true,\n//         infinite: true,\n//         speed: 1000,\n//         slidesToShow: 1,\n//         slidesToScroll: 1,\n//         autoplay: true,\n//         autoplaySpeed: 8000\n//       };\n\n//     const [contents,getContents] = useState([])\n//     const fireStore = firestore.collection('researchKeyword');\n\n//     useEffect(()=> {\n//         fireStore.where('active','==',true)\n//         .onSnapshot(snapshot => {\n//             const array = snapshot.docs.map(doc => ({\n//                 id:doc.id,\n//                 ...doc.data()\n//             }))\n//             getContents(array)\n//         })\n//     },[])\n\n    \n//     //content 일정 영역 넘어가면 ... 변환 => 코인앵무새 보드뷰 참고,\n//     //슬라이드 \n//     const content = contents.map(content => \n//         <div key={content.id}>\n//             <div  className={style.container}>\n//                 <div className={style.content_box}>\n//                     <div className={style.category}>집중탐구 세상에 UX</div>\n//                     <div className={style.title}>{content.title}</div>\n//                     <div className={style.content}>{content.subTitle}</div>\n//                     <div className={style.container_user}>\n//                         <ul className={style.ul}>\n//                              <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/></li>\n//                              <li className={style.view}>{content.views}</li>\n//                          </ul>\n//                     <Link to={`/research/${content.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n//                     </div>\n//                 </div>\n//                 <div className={style.img_box}>\n//                     <img  className={style.img} src={content.img} alt={content.img}/>\n//                 </div>\n//            </div>\n//         </div>\n//         )\n    \n\n//     return (\n//         <div className={style.session} >\n//             <Slider {...settings}>\n//                   {content}\n//             </Slider>\n\n           \n//         </div>\n//     );\n// };\n\n// export default Banner;","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx",["72","73","74","75","76","77","78","79","80","81","82"],"/Users/insu/Desktop/coding/salary/src/components/main/main.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx",["83","84"],"import React, { useEffect, useState } from 'react';\nimport style from './onboard.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\n\n\nconst Onboard = () => {\n\n    const params = useParams();\n    const fireStore = firestore.collection('appKeyword')\n    const [content,getContent] = useState('');\n    const [imgs,getImgs] = useState([]);\n    const [research,getResearch] = useState([]);\n\n\n    useEffect(()=> {\n        fireStore.doc(params.author).collection('appContents').doc(params.id)\n        .get().then(result => {\n            const data = result.data();\n            getContent(data);\n        })\n\n        firestore.collection('imgs').doc(params.author).collection('img').doc(params.id)\n        .collection('list').orderBy('order').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getImgs(array);\n        })\n    },[])\n\n\n    useEffect(()=> {\n       if(content) {\n        const research = content.research_keyword;\n        firestore.collection('researchDate').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            array.forEach(date=> {\n               research.map(research => {\n                firestore.collection('researchDate').doc(date.id).collection('research').where('keywords','array-contains',research)\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getResearch(prevState => [...prevState,array]);\n                })\n               })\n            })\n        })\n       }\n    },[content])\n\n\n    // useEffect(()=> {\n    //     if(content) {\n    //      const research = content.research_keyword;\n    //      research.map(research => {\n    //          firestore.collection('researchKeyword').where('keywords','array-contains',research)\n    //          .onSnapshot(snapshot => {\n    //          const array = snapshot.docs.map(doc => ({\n    //              id:doc.id,\n    //              ...doc.data()\n    //          }))\n    //          getResearch(array);\n    //      })\n    //      })\n    //     }\n    //  },[content])\n\n  \n\n\n    const imgView = e => {\n        return e.map(img => \n            <li key={img.id} className={style.img}>\n                <img className={style.imgs} src={img} alt={img.name}/>\n            </li>\n            )\n    }\n\n\n    const imgArray = imgs.map(img => \n        <div key={img.id} className={style.container}>  \n            <div className={style.content_box}>\n              <div className={style.name_box}>\n                     <div className={style.title}>{img.sub}</div>\n                </div>\n            <ul className={style.img_box}>\n                {imgView(img.imgs)}\n            </ul>\n        </div>\n    </div>\n        )\n\n    const researchViews = research.flat().map(research => \n        <li className={style.article_li}>  \n            <div className={style.article_box}>\n                  <div className={style.art_category}>집중탐구 세상에 UX</div>\n                  <div className={style.art_title}>{research.title}</div>\n                  {/* <div className={style.article} dangerouslySetInnerHTML={{ __html: research.text }}></div> */}\n                  <div className={style.article}>{research.subTitle}</div>\n                <div className={style.contain_user}>\n                <ul className={style.ul}>\n                     <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{research.views}</li>\n                </ul>\n                 <Link to={`/research/${research.year}년 ${research.month}월/${research.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                </div>\n           </div>\n        </li>\n\n    )\n\n    return (\n        <div className={style.session}>\n            <div className={style.explain_box}>\n                <div className={style.category}>{content.title_app_keyword}</div>\n                <div className={style.company}>{content.app_name}</div>\n                <div className={style.version}>update ver {content.app_ver} v</div>\n            </div>\n\n            {imgArray}\n    \n           \n         \n            <div className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>집중탐구</div>\n                    </div>\n                </div>  \n                <ul className={style.article_container}>\n                {researchViews}\n                </ul>\n            </div>\n\n\n\n        </div>\n    );\n};\n\n\n\nexport default Onboard;\n\n","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx",["85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport { getKeyword } from '../../service/store';\nimport style from './research.module.css';\nimport ResearchContent from './research_content/research_content';\n\nconst Research = () => {\n\n    const fireStore = firestore.collection('researchDate')\n    const [contents,getContents] = useState([]);\n    const [date,getDate] = useState([]);\n    const [keywords,getKeywords] = useState([]);\n    const [allkeywords,getAllkeywords] = useState([]);\n\n\n    useEffect(()=> {\n        fireStore.onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            for(let i = 0; i < array.length; i++) {\n                const arr = array[i].id;\n                getDate(prevState => [...prevState,arr]);;\n            }\n        })\n    },[])\n    \n    useEffect(()=> {\n        date.map(date => {\n            fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc =>({\n                    id:doc.id,\n                    ...doc.data()\n                }))\n                getAllkeywords(prevState => [...prevState,array])\n            \n            })\n        })\n    },[date])\n\n\n    const dateArticle = date.map(date => \n        <div key={date} className={style.container}>\n        <div className={style.explain_box}>\n            <div className={style.name_box}>\n                <div className={style.date}>{date}</div>\n                <div className={style.sub_explain}>간편 키워드 검색을 통해서 앱을 빠르게 찾아보세요!</div>\n            </div>\n            <ul className={style.ul}>\n                 <BoardLi date={date}/>\n            </ul>\n        </div>\n        <ul className={style.article_box}>\n            <ResearchContents date = {date}/>\n        </ul>\n    </div>   \n        )\n\n\n\n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.main_title}>전체보기</div>\n                <div className={style.sub_title}>헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.</div>\n            </div>\n\n            {dateArticle}\n\n        </div>\n    );\n};\n\n\n\nexport default Research;\n\n\nconst BoardLi = ({date}) => {\n\n    const fireStore = firestore.collection('researchDate');\n    const [keywords,getKeywords] = useState();\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getKeywords(array)\n        })\n       \n    },[])\n\n    let keyword;\n    if(keywords) {\n       const kk= keywords.map(c=> {\n           return c.keywords.map(c=> \n                  <li key={c.id} className={style.li_unActive}>{c}</li>\n                )\n        })\n        return keyword = kk;\n    }\n\n    return (\n        <div>{keyword}</div>\n    )\n};\n\nconst ResearchContents = ({date}) => {\n\n    \n    const fireStore = firestore.collection('researchDate');\n    const [contents,getContents] = useState([]);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array)\n        })\n    },[])\n\n\n   const content = contents.map(content => \n            <Link to ={`/research/${content.year}년 ${content.month}월/${content.id}`}>\n            <li className={style.article}>\n               <img className={style.img} src={content.img}></img>\n               <div className={style.title}>{content.title}</div>\n               <div className={style.article_info}>\n                    <div className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{content.views}</div>\n                    <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n               </div>\n            </li>\n            </Link>\n    )\n\n    return (\n        <>\n            {content}\n        </>\n    )\n}","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx",["99","100"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { firestore } from '../../../service/firebase';\nimport style from './research_content.module.css';\nimport firebase from 'firebase/app';\n\nconst ResearchContent = () => {\n\n    const params = useParams();\n    const date = params.date;\n    const docId = params.id;\n    const fireStore = firestore.collection('researchDate');\n    const [content, getContent] = useState('');\n    const [keywords, getKeywords] = useState([]); \n\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n    useEffect(()=> {\n        fireStore.doc(date).collection('research').doc(docId).update({\n            views:increment\n        })\n    },[])\n\n    useEffect(()=> {\n       \n\n        fireStore.doc(date).collection('research').doc(docId)\n        .get().then(result => {\n            const data = result.data();\n            getContent(data);\n            getKeywords(data.keywords);\n        })\n    },[])\n\n\n    const keyword = keywords.map(key => \n         <li key={key.id} className={style.keyword_li}>{key}</li>\n        )\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.header} style={{backgroundImage:`linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) ),url(${content.img})`,backgroundSize:'cover',backgroundRepeat:'no-repeat',opacity:'0.8'}}>\n                <div className={style.category}>집중탐구</div>\n                <div className={style.title}>{content.title}</div>\n                <div className={style.article_info}>\n                    <ul className={style.keyword_ul}>\n                        {keyword}\n                    </ul>\n                    <div className={style.user_info}>\n                        <div className={style.view}><img className={style.icon_view} src=\"/static/img/whiteview.png\" alt=\"view\"/>{content.views}</div>\n                        <div className={style.update}>최신 업데이트일 : {content.year}.{content.month}.{content.date}\u001c</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={style.article_container}>\n                <div className={style.article} dangerouslySetInnerHTML={{ __html: content.text }}></div>\n            </div>\n\n            {/* <div className={style.more}>\n                <div className={style.shadow}></div>\n                <div className={style.more_text}>\n                열심히 작성한 관리자를 위해!<br/>\n                아낌없는 후원이 가능하다구욧!\n                </div>\n                <button className={style.more_btn}>후원하고 더보기</button>\n            </div> */}\n        </div>\n    );\n};\n\nexport default ResearchContent;","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/search/search.jsx",["101","102","103"],"import React, { useEffect, useState } from 'react';\nimport style from './search.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\n\nconst Search = () => {\n\n    const [change, setChange] = useState(true);\n    const [contents, getContents] = useState([]);\n    const [researches,getResearches] = useState([]);\n    const [imgs, getImgs] = useState([]);\n    const params = useParams().id;\n\n    const liChange = (e) => {\n            const value = e.target.value;\n            if(value ==='app') {\n                setChange(true);\n            }else if(value === 'research') {\n                setChange(false)\n            }\n    }\n\n\n    useEffect(()=> {\n            firestore.collection('appKeyword').where('active','==',true).onSnapshot(snapshot => {\n                const array = snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(keyword => {\n                    firestore.collection('appKeyword').doc(keyword.id).collection('appContents')\n                    .where('app_name',\">=\",params).where(\"app_name\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getContents(prevState => [...prevState,array])\n                        array.map(arr => {\n                            firestore.collection('imgs').doc(keyword.id).collection('img')\n                            .doc(arr.id).collection('list').where('order','==','1')\n                            .onSnapshot(snapshot => {\n                                const array = snapshot.docs.map(doc => ({\n                                    id:doc.id,\n                                    ...doc.data()\n                                }))\n                                getImgs(prevState => [...prevState,array]);\n                            })\n                        })\n                       \n                    })\n                })\n            })\n            //\n            firestore.collection('researchDate').onSnapshot(snapshot => {\n                const array =snapshot.docs.map(doc => ({\n                    id:doc.id\n                }))\n                array.forEach(arr => {\n                    firestore.collection('researchDate').doc(arr.id).collection('research')\n                    .where('title',\">=\",params).where(\"title\",\"<=\",params + \"\\uf8ff\")\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getResearches(prevState => [...prevState,array])\n                    })\n                })\n            })\n    },[])\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map(img => \n                <li className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                </li>)\n            }\n        })\n    }\n\n\n    const content = contents.flat().map(content => \n                 <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={content.id}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n\n    const research = researches.flat().map(research => \n        <li key={research.id} className={style.article_li}>  \n            <div className={style.article_container}>\n                  <div className={style.art_category}>집중탐구 세상에 UX</div>\n                  <div className={style.art_title}>{research.title}</div>\n                  <div className={style.article}>{research.subTitle}</div>\n                <div className={style.contain_user}>\n                <ul className={style.ul}>\n                     <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>{research.views}</li>\n                </ul>\n                 <Link to={`/research/${research.year}년 ${research.month}월/${research.id}`}><button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button></Link>\n                </div>\n           </div>\n        </li>\n        )\n\n\n\n   \n    \n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>검색</div>\n                <div className={style.main_title}>'{params}'검색 결과</div>\n                <div className={style.select_box}>\n                    <button onClick={liChange} value='app' className={change ? style.li_active: style.li_unActive}>앱 화면</button>\n                    <button onClick={liChange} value='research' className={!change ? style.li_active: style.li_unActive}>집중 탐구</button>\n                </div>\n            </div>\n            {change ? \n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 앱 화면</div>\n                        {content}\n                </div>\n            </div>\n\n                :\n\n            <div className={style.container}>\n                <div className={style.explain_box}>\n                    <div className={style.search}>‘{params}’을(를) 주제로 한 집중탐구 컨텐츠</div>\n                    <ul className={style.article_box}>\n                           {research}\n\n                            \n                        </ul>\n\n                </div>\n            </div>\n        }\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state,props) => {\n    return {search:state}\n}\n\nexport default connect(mapStateToProps,null) (Search);","/Users/insu/Desktop/coding/salary/src/service/firebase.js",[],"/Users/insu/Desktop/coding/salary/src/service/store.js",[],"/Users/insu/Desktop/coding/salary/src/components/contentsList/contentsList.jsx",["104","105"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport style from './contentsList.module.css';\n\nconst ContentsList = () => {\n\n    const params = useParams().id;\n    const fireStore = firestore.collection('appKeyword').doc(params).collection('appContents')\n    const [contents, getContents] = useState([]);\n    const [imgs, getImgs] = useState([])\n\n\n    useEffect(()=> {\n        fireStore.where('active','==',false).onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array);\n            array.forEach(keyword => {\n                const key = keyword.id;\n                firestore.collection('imgs').doc(params).collection('img')\n                .doc(key).collection('list').where('order','==','1')\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getImgs(prevState => [...prevState,array])\n                })\n            })\n        })\n    },[params])\n\n    const imgsView = id => {\n        return imgs.flat().map(img => {\n            if(id === `${img.app_name}${img.app_ver}`) {\n                return img.imgs.map(img => \n                <li className={style.img}>\n                    <img className={style.imgs} src={img} alt=\"\"/>\n                </li>)\n            }\n        })\n    }\n\n\n\n    const content = contents.map(content => \n         <Link to = {`/onboard/${content.title_app_keyword}/${content.id}`}>\n            <div \n            key={content.id}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver} v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n            </div>\n        </Link>\n        )\n\n    \n\n\n    return (\n        <div className={style.session}>\n            <div className={style.main_box}>\n                <div className={style.category}>{params}</div>\n                <div className={style.main_title}>전체보기</div>\n                <div className={style.sub_title}>헤이앱의 모든 콘텐츠가 최신순으로 정렬됩니다.</div>\n            </div>\n\n            {content}\n\n        </div>\n    );\n};\n\nexport default ContentsList;",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":44,"column":7,"nodeType":"112","endLine":44,"endColumn":9,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":18,"column":12,"nodeType":"116","messageId":"117","endLine":18,"endColumn":19},{"ruleId":"114","severity":1,"message":"118","line":18,"column":20,"nodeType":"116","messageId":"117","endLine":18,"endColumn":30},{"ruleId":"114","severity":1,"message":"119","line":19,"column":12,"nodeType":"116","messageId":"117","endLine":19,"endColumn":19},{"ruleId":"114","severity":1,"message":"120","line":19,"column":20,"nodeType":"116","messageId":"117","endLine":19,"endColumn":30},{"ruleId":"114","severity":1,"message":"121","line":20,"column":12,"nodeType":"116","messageId":"117","endLine":20,"endColumn":19},{"ruleId":"114","severity":1,"message":"122","line":20,"column":20,"nodeType":"116","messageId":"117","endLine":20,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":48,"column":7,"nodeType":"112","endLine":48,"endColumn":9,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"124","line":64,"column":7,"nodeType":"112","endLine":64,"endColumn":20,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":76,"column":40,"nodeType":"128","messageId":"129","endLine":76,"endColumn":42},{"ruleId":"110","severity":1,"message":"130","line":95,"column":7,"nodeType":"112","endLine":95,"endColumn":35,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":104,"column":33,"nodeType":"128","messageId":"133","endLine":104,"endColumn":35},{"ruleId":"110","severity":1,"message":"134","line":33,"column":7,"nodeType":"112","endLine":33,"endColumn":9,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"127","line":44,"column":38,"nodeType":"128","messageId":"129","endLine":44,"endColumn":40},{"ruleId":"114","severity":1,"message":"136","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":35},{"ruleId":"114","severity":1,"message":"137","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":20},{"ruleId":"114","severity":1,"message":"138","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":23},{"ruleId":"114","severity":1,"message":"139","line":11,"column":12,"nodeType":"116","messageId":"117","endLine":11,"endColumn":20},{"ruleId":"114","severity":1,"message":"140","line":11,"column":21,"nodeType":"116","messageId":"117","endLine":11,"endColumn":32},{"ruleId":"114","severity":1,"message":"141","line":13,"column":12,"nodeType":"116","messageId":"117","endLine":13,"endColumn":20},{"ruleId":"114","severity":1,"message":"142","line":13,"column":21,"nodeType":"116","messageId":"117","endLine":13,"endColumn":32},{"ruleId":"114","severity":1,"message":"143","line":14,"column":12,"nodeType":"116","messageId":"117","endLine":14,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":27,"column":7,"nodeType":"112","endLine":27,"endColumn":9,"suggestions":"144"},{"ruleId":"126","severity":1,"message":"127","line":30,"column":23,"nodeType":"128","messageId":"129","endLine":30,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":40,"column":7,"nodeType":"112","endLine":40,"endColumn":13,"suggestions":"145"},{"ruleId":"110","severity":1,"message":"146","line":95,"column":7,"nodeType":"112","endLine":95,"endColumn":9,"suggestions":"147"},{"ruleId":"110","severity":1,"message":"146","line":126,"column":7,"nodeType":"112","endLine":126,"endColumn":9,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":132,"column":16,"nodeType":"151","endLine":132,"endColumn":61},{"ruleId":"110","severity":1,"message":"152","line":22,"column":7,"nodeType":"112","endLine":22,"endColumn":9,"suggestions":"153"},{"ruleId":"110","severity":1,"message":"154","line":33,"column":7,"nodeType":"112","endLine":33,"endColumn":9,"suggestions":"155"},{"ruleId":"126","severity":1,"message":"127","line":41,"column":39,"nodeType":"128","messageId":"129","endLine":41,"endColumn":41},{"ruleId":"110","severity":1,"message":"156","line":73,"column":7,"nodeType":"112","endLine":73,"endColumn":9,"suggestions":"157"},{"ruleId":"126","severity":1,"message":"132","line":76,"column":36,"nodeType":"128","messageId":"133","endLine":76,"endColumn":38},{"ruleId":"110","severity":1,"message":"111","line":34,"column":7,"nodeType":"112","endLine":34,"endColumn":15,"suggestions":"158"},{"ruleId":"126","severity":1,"message":"132","line":37,"column":36,"nodeType":"128","messageId":"133","endLine":37,"endColumn":38},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fireStore'. Either include it or remove the dependency array.","ArrayExpression",["161"],"no-unused-vars","'lastDoc' is assigned a value but never used.","Identifier","unusedVar","'setLastDoc' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","'setIsEmpty' is assigned a value but never used.",["162"],"React Hook useEffect has missing dependencies: 'activeBtn' and 'fireStore'. Either include them or remove the dependency array.",["163"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'activeBtn'. Either include it or remove the dependency array.",["164"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'fireStore', 'params.author', and 'params.id'. Either include them or remove the dependency array.",["165"],"'useMemo' is defined but never used.","'getKeyword' is defined but never used.","'ResearchContent' is defined but never used.","'contents' is assigned a value but never used.","'getContents' is assigned a value but never used.","'keywords' is assigned a value but never used.","'getKeywords' is assigned a value but never used.","'allkeywords' is assigned a value but never used.",["166"],["167"],"React Hook useEffect has missing dependencies: 'date' and 'fireStore'. Either include them or remove the dependency array.",["168"],["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'date', 'docId', 'fireStore', and 'increment'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has missing dependencies: 'date', 'docId', and 'fireStore'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"174","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [fireStore]",{"range":"196","text":"197"},{"range":"198","text":"197"},"Update the dependencies array to be: [activeBtn, appKeywords, fireStore]",{"range":"199","text":"200"},"Update the dependencies array to be: [activeBtn, allContentsArr, appKeywords]",{"range":"201","text":"202"},"Update the dependencies array to be: [fireStore, params.author, params.id]",{"range":"203","text":"204"},{"range":"205","text":"197"},"Update the dependencies array to be: [date, fireStore]",{"range":"206","text":"207"},{"range":"208","text":"207"},{"range":"209","text":"207"},"Update the dependencies array to be: [date, docId, fireStore, increment]",{"range":"210","text":"211"},"Update the dependencies array to be: [date, docId, fireStore]",{"range":"212","text":"213"},"Update the dependencies array to be: [params]",{"range":"214","text":"215"},"Update the dependencies array to be: [fireStore, params]",{"range":"216","text":"217"},[1324,1326],"[fireStore]",[1544,1546],[2072,2085],"[activeBtn, appKeywords, fireStore]",[3125,3153],"[activeBtn, allContentsArr, appKeywords]",[1131,1133],"[fireStore, params.author, params.id]",[939,941],[1329,1335],"[date, fireStore]",[2746,2748],[3477,3479],[730,732],"[date, docId, fireStore, increment]",[986,988],"[date, docId, fireStore]",[3077,3079],"[params]",[1245,1253],"[fireStore, params]"]