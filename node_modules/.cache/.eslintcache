[{"/Users/insu/Desktop/coding/salary/src/index.js":"1","/Users/insu/Desktop/coding/salary/src/App.js":"2","/Users/insu/Desktop/coding/salary/src/components/header/header.jsx":"3","/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx":"4","/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx":"5","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx":"6","/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx":"7","/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx":"8","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx":"9","/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx":"10","/Users/insu/Desktop/coding/salary/src/components/login/login.jsx":"11","/Users/insu/Desktop/coding/salary/src/components/search/search.jsx":"12","/Users/insu/Desktop/coding/salary/src/service/firebase.js":"13","/Users/insu/Desktop/coding/salary/src/service/store.js":"14"},{"size":296,"mtime":1634537587865,"results":"15","hashOfConfig":"16"},{"size":1171,"mtime":1634627752497,"results":"17","hashOfConfig":"16"},{"size":1243,"mtime":1634560004639,"results":"18","hashOfConfig":"16"},{"size":2514,"mtime":1634640959624,"results":"19","hashOfConfig":"16"},{"size":6682,"mtime":1634541912311,"results":"20","hashOfConfig":"16"},{"size":261,"mtime":1631086738278,"results":"21","hashOfConfig":"16"},{"size":1292,"mtime":1631595878425,"results":"22","hashOfConfig":"16"},{"size":7214,"mtime":1634627761439,"results":"23","hashOfConfig":"16"},{"size":6535,"mtime":1631166511848,"results":"24","hashOfConfig":"16"},{"size":1693,"mtime":1631090503102,"results":"25","hashOfConfig":"16"},{"size":1599,"mtime":1631097057989,"results":"26","hashOfConfig":"16"},{"size":10201,"mtime":1631172892730,"results":"27","hashOfConfig":"16"},{"size":893,"mtime":1634123900329,"results":"28","hashOfConfig":"16"},{"size":604,"mtime":1634541874682,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pn9a5m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/insu/Desktop/coding/salary/src/index.js",[],["61","62"],"/Users/insu/Desktop/coding/salary/src/App.js",[],"/Users/insu/Desktop/coding/salary/src/components/header/header.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/main/banner/banner.jsx",["63"],"/Users/insu/Desktop/coding/salary/src/components/main/app_contents/app_content.jsx",["64","65","66","67","68"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './app_content.module.css';\nimport {firestore} from '../../../service/firebase';\nimport { connect } from 'react-redux';\nimport {getKeyword} from '../../../service/store';\n\n\nconst AppContent = ({getKeyword}) => {\n\n    const fireStore = firestore.collection('appKeyword');\n\n    const [activeBtn,setActiveBtn] = useState(\"\");\n    const [appKeywords,getAppKeywords] = useState([]);\n    const [contents,getContents] = useState([]);\n    const [allContents,getAllContents] = useState([]);\n    const [allImgs,getAllImgs] = useState([]);\n    const [allContentsArr,getAllContentsArr] =useState([]);\n    const [allImgsArr,getAllImgsArr] = useState([]);\n  \n    \n\n    const handleKeyword = e => {\n        setActiveBtn(e)\n        fireStore.doc(e).collection('appContents').where('active','==',false)\n        .onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getContents(array);\n        })\n    };\n    \n  \n    useEffect(()=> {\n        fireStore.where('active','==',true).onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id\n            }))\n            for(let i = 0; i < array.length; i++) {\n                const arr = array[i].id;\n                getAppKeywords(prevState => [...prevState,arr]);\n                getKeyword(arr);\n            }\n        })\n    },[])\n\n    useEffect(()=> {\n        if(!activeBtn) {\n            appKeywords.forEach(keyword => {\n                fireStore.doc(keyword).collection('appContents').where('active','==',false)\n                .onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getAllContents(prevState => [...prevState,array]);\n                })\n            })\n        }\n        \n    },[appKeywords])\n\n    useEffect(()=> {\n        const contentsFlat = allContents.flat();\n        const allContentsArray = [...new Set(contentsFlat.map(JSON.stringify))].map(JSON.parse);\n        getAllContentsArr(allContentsArray);\n    },[allContents])\n\n\n    useEffect(()=> {\n        if(!activeBtn && allContentsArr){\n            try{\n            allContentsArr.map(content => {\n                const id = content.id; \n                appKeywords.forEach(keyword => {\n                    firestore.collection('imgs').doc(keyword).collection('img')\n                    .doc(id).collection('list').where('order','==','1')\n                    .onSnapshot(snapshot => {\n                        const array = snapshot.docs.map(doc => ({\n                            id:doc.id,\n                            ...doc.data()\n                        }))\n                        getAllImgs(prevState => [...prevState,array])\n                    })\n                })\n            })\n           }catch(err) {\n            console.log(err)\n          }\n        }\n      \n    },[allContentsArr,appKeywords])\n\n    useEffect(()=> {\n        const all = allImgs.flat();\n        const allimgs = [...new Set(all.map(JSON.stringify))].map(JSON.parse);\n        getAllImgsArr(allimgs);\n    },[allImgs])\n\n    const imgsView = id => {\n       return allImgsArr.map(img=> {\n          if(id === `${img.app_name}${img.app_ver}`) {\n              return img.imgs.map(img => \n              <li className={style.img}>\n                  <img className={style.img} src={img} alt=\"\"/>\n              </li>)\n          }\n       })\n    }\n   \n    const allContent = allContentsArr.map(content => \n        <Link to = {`/onboard/${content.id}`}>\n            <div \n            key={content.id}\n            className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>{content.app_name}</div>\n                        <div className={style.update}>업데이트 버전: {content.app_ver}v</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgsView(content.id)}\n                        \n                    </ul>\n                </div>\n                \n            </div>\n        </Link>\n        )\n\n\n        let content;\n        if(contents) {\n            const cont = contents.map(content =>\n                <Link to = {`/onboard/${content.id}`}>\n                     <div \n                      key={content.id}\n                      className={style.container}>\n                         <div className={style.content_box}>\n                               <div className={style.name_box}>\n                                   <div className={style.title}>{content.app_name}</div>\n                                   <div className={style.update}>업데이트 버전: {content.app_ver}v</div>\n                               </div>\n                           <ul className={style.img_box}>\n                                 {imgsView(content.id)}\n                           </ul>\n                     </div>\n                    </div>\n                </Link>    \n                )\n              content = cont\n        }\n       \n\n\n\n    const keyword = appKeywords.map(keyword => \n        <li\n        key={keyword}\n        onClick= {()=>handleKeyword(keyword)}\n        className={activeBtn === keyword ? style.li_active : style.li_unActive}\n        >\n        {keyword}\n        </li>\n        )\n\n\n    return (\n        <div className={style.session}>\n            <div className={style.container}>\n                 <nav className={style.nav}>\n                     <div className={style.title}>어떤 앱 화면을 찾고 계시나요?</div>\n                     <div className={style.sub_title}>간편 키워드 검색을 통해서 앱을 빠르게 찾아보세요!</div>\n                     <ul className={style.ul}>\n                            <li \n                            className={!activeBtn? style.li_active : style.li_unActive}\n                            onClick={()=>setActiveBtn(\"\")}\n                            >\n                            전체\n                            </li>\n                            {keyword}\n                     </ul>\n                 </nav>\n            </div>\n\n\n\n            {!activeBtn ? allContent : content}\n  \n            <div className={style.more}>더보기</div>\n        </div>\n    );\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getKeyword:(key) => dispatch(getKeyword(key))\n    }\n};\n\n\nexport default connect(null,mapDispatchToProps)(AppContent);","/Users/insu/Desktop/coding/salary/src/components/main/main.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/footer/footer.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/onboard/onboard.jsx",["69"],"import React, { useEffect, useState } from 'react';\nimport style from './onboard.module.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { useParams } from 'react-router-dom';\nimport { firestore } from '../../service/firebase';\nimport { connect } from 'react-redux';\n\nconst Onboard = ({keyword}) => {\n\n    const params = useParams();\n    const fireStore = firestore.collection('appKeyword')\n    const [content,getContent] = useState('');\n    const [imgs,getImgs] = useState([]);\n\n\n    useEffect(()=> {\n        if(keyword) {\n            keyword.map(async(key) => {\n                const keyword = await Object.values(key).[0];\n                console.log(keyword);\n                fireStore.doc(keyword).collection('appContents').doc(params.id)\n                .get().then(result => {\n                    const data = result.data();\n                    getContent(data);\n                })\n\n                firestore.collection('imgs').doc(keyword).collection('img').doc(params.id)\n                .collection('list').orderBy('order').onSnapshot(snapshot => {\n                    const array = snapshot.docs.map(doc => ({\n                        id:doc.id,\n                        ...doc.data()\n                    }))\n                    getImgs(array);\n                })\n            })\n        }\n    },[])  \n\n\n    const imgView = e => {\n      return e.map(img => \n            <li key={img.id} className={style.img}>\n                <img className={style.img} src={img} alt={img.name}/>\n            </li>\n            )\n    }\n\n    let img;\n    if(imgs) {\n       const imgsView = imgs.map(img =>  \n            <div key={img.id} className={style.container}>  \n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                         <div className={style.title}>{img.sub}</div>\n                    </div>\n                    <ul className={style.img_box}>\n                        {imgView(img.imgs)}\n                    </ul>\n                </div>\n            </div>\n            )\n        img = imgsView;\n    }\n\n\n\n    let contentView;\n   if(content) {\n       const con = \n       <div className={style.explain_box}>\n           <div className={style.category}>{content.title_app_keyword}</div>\n            <div className={style.company}>{content.app_name}</div>\n            <div className={style.version}>update ver {content.app_ver} v</div>\n        </div>;\n        contentView = con;\n   }\n\n    \n\n    return (\n        <div className={style.session}>\n            {contentView}\n\n            {img}\n\n            <div className={style.container}>\n                <div className={style.content_box}>\n                    <div className={style.name_box}>\n                        <div className={style.title}>집중탐구</div>\n                    </div>\n                </div>  \n                <ul className={style.article_container}>\n                    <li className={style.article_li}>  \n                            <div className={style.article_box}>\n                                <div className={style.art_category}>집중탐구 세상에 UX</div>\n                                <div className={style.art_title}>쿠팡은 어떻게 쿠팡이츠 유입을 가능하게 했을까?</div>\n                                <div className={style.article}>쿠팡은 커머스 서비스와 이외 서비스를 명확하게 \n                                    구분 짓는 모습을 보이는데요. 로켓 프레시나 C.애비뉴와 같은 전문관들은 별도로 \n                                    독립시키기 보다는 쿠팡은 카카오톡과 직접 시너지가 나는 일부 서비스를 제외하고...</div>\n                                <div className={style.contain_user}>\n                                  <ul className={style.ul}>\n                                      <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>12345</li>\n                                 </ul>\n                                  <button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button>\n                                </div>\n                            </div>\n                    </li>\n\n                    <li className={style.article_li}>  \n                            <div className={style.article_box}>\n                                <div className={style.art_category}>집중탐구 세상에 UX</div>\n                                <div className={style.art_title}>쿠팡은 어떻게 쿠팡이츠 유입을 가능하게 했을까?</div>\n                                <div className={style.article}>쿠팡은 커머스 서비스와 이외 서비스를 명확하게 \n                                    구분 짓는 모습을 보이는데요. 로켓 프레시나 C.애비뉴와 같은 전문관들은 별도로 \n                                    독립시키기 보다는 쿠팡은 카카오톡과 직접 시너지가 나는 일부 서비스를 제외하고...</div>\n                                <div className={style.contain_user}>\n                                  <ul className={style.ul}>\n                                      <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>12345</li>\n                                 </ul>\n                                  <button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button>\n                                </div>\n                            </div>\n                    </li>\n\n                    <li className={style.article_li}>  \n                            <div className={style.article_box}>\n                                <div className={style.art_category}>집중탐구 세상에 UX</div>\n                                <div className={style.art_title}>쿠팡은 어떻게 쿠팡이츠 유입을 가능하게 했을까?</div>\n                                <div className={style.article}>쿠팡은 커머스 서비스와 이외 서비스를 명확하게 \n                                    구분 짓는 모습을 보이는데요. 로켓 프레시나 C.애비뉴와 같은 전문관들은 별도로 \n                                    독립시키기 보다는 쿠팡은 카카오톡과 직접 시너지가 나는 일부 서비스를 제외하고...</div>\n                                <div className={style.contain_user}>\n                                  <ul className={style.ul}>\n                                      <li className={style.view}><img className={style.icon_view} src=\"/static/img/view.png\" alt=\"view\"/>12345</li>\n                                 </ul>\n                                  <button className={style.btn}>당장 보러가기 &ensp;<FontAwesomeIcon icon={faChevronRight} /></button>\n                                </div>\n                            </div>\n                    </li>\n                </ul>\n            </div>\n\n\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {keyword:state}\n}\n\nexport default connect(mapStateToProps) (Onboard);","/Users/insu/Desktop/coding/salary/src/components/research/research.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/research/research_content/research_content.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/login/login.jsx",[],"/Users/insu/Desktop/coding/salary/src/components/search/search.jsx",[],"/Users/insu/Desktop/coding/salary/src/service/firebase.js",[],"/Users/insu/Desktop/coding/salary/src/service/store.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":7,"nodeType":"76","endLine":33,"endColumn":9,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":47,"column":7,"nodeType":"76","endLine":47,"endColumn":9,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":63,"column":7,"nodeType":"76","endLine":63,"endColumn":20,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":75,"column":40,"nodeType":"84","messageId":"85","endLine":75,"endColumn":42},{"ruleId":"74","severity":1,"message":"86","line":94,"column":7,"nodeType":"76","endLine":94,"endColumn":35,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":103,"column":33,"nodeType":"84","messageId":"89","endLine":103,"endColumn":35},{"ruleId":"74","severity":1,"message":"90","line":38,"column":7,"nodeType":"76","endLine":38,"endColumn":9,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fireStore'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'fireStore' and 'getKeyword'. Either include them or remove the dependency array. If 'getKeyword' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["95"],"React Hook useEffect has missing dependencies: 'activeBtn' and 'fireStore'. Either include them or remove the dependency array.",["96"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'activeBtn'. Either include it or remove the dependency array.",["97"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'fireStore', 'keyword', and 'params.id'. Either include them or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [fireStore]",{"range":"109","text":"110"},"Update the dependencies array to be: [fireStore, getKeyword]",{"range":"111","text":"112"},"Update the dependencies array to be: [activeBtn, appKeywords, fireStore]",{"range":"113","text":"114"},"Update the dependencies array to be: [activeBtn, allContentsArr, appKeywords]",{"range":"115","text":"116"},"Update the dependencies array to be: [fireStore, keyword, params.id]",{"range":"117","text":"118"},[1004,1006],"[fireStore]",[1524,1526],"[fireStore, getKeyword]",[2043,2056],"[activeBtn, appKeywords, fireStore]",[3096,3124],"[activeBtn, allContentsArr, appKeywords]",[1402,1404],"[fireStore, keyword, params.id]"]